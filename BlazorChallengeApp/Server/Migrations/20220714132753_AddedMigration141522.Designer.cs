// <auto-generated />
using System;
using BlazorChallengeApp.Server.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorChallengeApp.Server.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20220714132753_AddedMigration141522")]
    partial class AddedMigration141522
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("BlazorChallengeApp.Shared.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("BlazorChallengeApp.Shared.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cinema");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Centry Cinema Kigali"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Canal Olympia Kigali"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Centry Cinema Ireland"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Canal Olympia France"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Centry Cinema UK"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Canal Olympia USA"
                        });
                });

            modelBuilder.Entity("BlazorChallengeApp.Shared.Movie", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cast")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RunningTimesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RunningTimesId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("BlazorChallengeApp.Shared.MovieCinema", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CinemaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("CinemaId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieCinema");
                });

            modelBuilder.Entity("BlazorChallengeApp.Shared.RunningTimes", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sun")
                        .HasColumnType("TEXT");

                    b.Property<string>("Thu")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Wed")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RunningTimes");
                });

            modelBuilder.Entity("BlazorChallengeApp.Shared.Seat", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("TEXT");

                    b.Property<int>("column")
                        .HasColumnType("INTEGER");

                    b.Property<int>("row")
                        .HasColumnType("INTEGER");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("BookingId");

                    b.ToTable("Seat");
                });

            modelBuilder.Entity("BlazorChallengeApp.Shared.Ticket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<double>("_price")
                        .HasColumnType("REAL");

                    b.Property<string>("_ticketName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ticket");

                    b.HasData(
                        new
                        {
                            Id = "d82dc5d5-8027-4bc4-ba28-6d9a6a7bf8b9",
                            _price = 10.0,
                            _ticketName = "ADULT"
                        },
                        new
                        {
                            Id = "e136d421-5ab0-4277-a3b7-93b1392b9617",
                            _price = 10.0,
                            _ticketName = "CHILD (AGE 14 AND UNDER)"
                        },
                        new
                        {
                            Id = "54fe4bfe-9fb8-44ae-9e10-0e150e748868",
                            _price = 32.0,
                            _ticketName = "FAMILY X 4(2 AD + 2CH OR 1AD +3 CH)"
                        },
                        new
                        {
                            Id = "9f7c45ef-0603-4e90-98ce-a86cc1f2ae0c",
                            _price = 8.5,
                            _ticketName = "STUDENT"
                        },
                        new
                        {
                            Id = "4df27a81-219e-400a-82b7-25ffaf7c1a81",
                            _price = 8.5,
                            _ticketName = "SENIOR(65 & OVER)"
                        });
                });

            modelBuilder.Entity("BlazorChallengeApp.Shared.Movie", b =>
                {
                    b.HasOne("BlazorChallengeApp.Shared.RunningTimes", "RunningTimes")
                        .WithMany()
                        .HasForeignKey("RunningTimesId");

                    b.Navigation("RunningTimes");
                });

            modelBuilder.Entity("BlazorChallengeApp.Shared.MovieCinema", b =>
                {
                    b.HasOne("BlazorChallengeApp.Shared.Cinema", "Cinema")
                        .WithMany()
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorChallengeApp.Shared.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("BlazorChallengeApp.Shared.Seat", b =>
                {
                    b.HasOne("BlazorChallengeApp.Shared.Booking", null)
                        .WithMany("seats")
                        .HasForeignKey("BookingId");
                });

            modelBuilder.Entity("BlazorChallengeApp.Shared.Booking", b =>
                {
                    b.Navigation("seats");
                });
#pragma warning restore 612, 618
        }
    }
}
